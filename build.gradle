plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'nu.studer.jooq' version '8.2.1'
}

group = 'codesuda'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

project.ext {
	querydslVersion = dependencyManagement.importedProperties['querydsl.version']
	jooqVersion = dependencyManagement.importedProperties['jooq.version']
	mysqlVersion = dependencyManagement.importedProperties['mysql.version']
}

dependencies {
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.data:spring-data-rest-hal-explorer'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
//	runtimeOnly 'org.postgresql:postgresql'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

// queryDSL 설정
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

// Jooq
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation("org.jooq:jooq-codegen:3.18.0")
	jooqGenerator('jakarta.xml.bind:jakarta.xml.bind-api:4.0.0')
	jooqGenerator "mysql:mysql-connector-java:${project.mysqlVersion}"

}

tasks.named('test') {
	useJUnitPlatform()
}

// querydsl 설정
def generated='src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile).configureEach {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
	main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
	delete file(generated)
}

// Jooq 설정부
def generatedJooq = 'src/main/generated-jooq'

jooq {
	version = project.jooqVersion

	configurations {
		main {  // name of the jOOQ configuration
			generationTool {
                logging = org.jooq.meta.jaxb.Logging.WARN
				jdbc {
					driver = 'com.mysql.cj.jdbc.Driver'
					url = 'jdbc:mysql://localhost:3306/inline'
					user = 'root'
					password = ''
				}
				generator {
					name = 'org.jooq.codegen.JavaGenerator'
					database {
						name = 'org.jooq.meta.mysql.MySQLDatabase'
						inputSchema = 'inline'
						includes = '.*'
						excludes = ''
						forcedTypes {
							forcedType {
								userType = 'codesuda.inLine.constant.EventStatus'
								enumConverter = true
								includeExpression = '.*\\.event_status'
								includeTypes = '.*'
							}
							forcedType {
								userType = 'codesuda.inLine.constant.PlaceType'
								enumConverter = true
								includeExpression = '.*\\.place_type'
								includeTypes = '.*'
							}
						}
					}
					generate {
						deprecated = false
						records = true
						immutablePojos = true
						fluentSetters = true
						javaTimeTypes = true
					}
					target {
						packageName = 'codesuda.inLine'
						directory = generatedJooq
					}
					strategy.name = "org.jooq.codegen.DefaultGeneratorStrategy"
				}
			}
		}
	}
}

// incremental build (증분 빌드) - Jooq 오브젝트 생성 퍼포먼스 향상
tasks.named('generateJooq').configure {
	allInputsDeclared = true
	outputs.cacheIf { true }
}
// java source set 에 Jooq 디렉토리 추가, 없어도 jooq source 를 잘 찾으면 설정을 안해 주어도 된다.
//sourceSets {
//	main.java.srcDir generatedJooq
//}


// gradle clean 시에 Jooq 디렉토리 삭제 (본래의 Jooq 의도에는 맞지 않는 사용법)
tasks.named('clean') {
	dependsOn 'cleanGenerateJooq'
}
